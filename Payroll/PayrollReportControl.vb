Imports Reports

Public Class PayrollReportControl

    Private DB As SQLDB, PayrollViewName As String
    Dim extAssembly As System.Reflection.Assembly
    Dim clsSec As New clsSecurity
    Dim ReportsTable As New DataTable
    Dim sql_reportlist As String

    Private Sub RefreshData()
        clsSec.propSQLConnStr = MPSDB.GetConnectionString

        Select Case UCase(PayrollViewName)
            Case UCase("PayrollViewSA")
                sql_reportlist = clsSec.get_reports(USER_ID, ReportsTable, "SPECIAL ALLOTMENT PAYROLL (QUICK VIEW)")

            Case UCase("PayrollViewHA")
                sql_reportlist = clsSec.get_reports(USER_ID, ReportsTable, "HOME ALLOTMENT PAYROLL (QUICK VIEW)")

            Case UCase("PayrollViewONB")
                sql_reportlist = clsSec.get_reports(USER_ID, ReportsTable, "ONBOARD PAYROLL (QUICK VIEW)")

        End Select

        clsFeature.filterTableByFeature(ReportsTable, COMPANYID, FEATUREKEY)
        ReportGrid.DataSource = ReportsTable
    End Sub

    Public Sub ShowPayrollReport(PayPeriod As String, PayPrincipal As String, PayVessels As String, PayIDs As String, Optional SelectedRecordList As String = "")
        '######################################################################################################
        'Get the signatories from the payroll view form And pass it to the report
        Dim REPORT_DETAIL As New Reports.ReportDetail
        Dim filterOpt As New Reports.BaseFilterOption
        Dim sortOpt As New Reports.BaseSortOption
        sortOpt.RefreshData(IfNull(ReportView.GetFocusedRowCellValue("SortFields"), ""))
        PassPayrollSignatoryToReportDetail(REPORT_DETAIL)
        'PayVessels = IIf(Trim(PayVessels).Length > 0, Replace("'" & PayVessels.Replace(",", "','") & "'", " ", String.Empty), "") 'Earlsan 20161125
        'PayIDs = IIf(Trim(PayIDs).Length > 0, Replace("'" & PayIDs.Replace(",", "','") & "'", " ", String.Empty), "") 'Earlsan 20161125
        REPORT_DETAIL.FilterOption = Reports.FilterOption.CreateWithCustomValues("Period;Principal;Vessel;RefNo", PayPeriod & ";" & PayPrincipal & ";" & PayVessels & ";" & PayIDs)
        REPORT_DETAIL.SortOption = sortOpt
        REPORT_DETAIL.PresentRecord.SelectionList = SelectedRecordList
        'REPORT_DETAIL.FilterOption.SetFilterValue("Period", MPS4.Period)
        'REPORT_DETAIL.FilterOption.SetFilterValue("Principal", MPS4.FKeyPrinCode)
        'REPORT_DETAIL.FilterOption.SetFilterValue("Vessel", MPS4.FKeyVslCode)
        'REPORT_DETAIL.FilterOption.SetFilterValue("Ref. No.", MPS4.RefNo)
        'Note:
        '1. Pass the REPORT_DETAIL class to the report object (the maincontent object)
        '2. From the REPORT_DETAIL class you can get the signatory value by calling any of the following:
        '    - REPORT_DETAIL.PreparedBy.Name (or .Position or .NameAndPosition)
        '    - REPORT_DETAIL.NotedBy.Name (or .Position or .NameAndPosition)
        '    - REPORT_DETAIL.ReceivedBy.Name (or .Position or .NameAndPosition)

        '######################################################################################################

        'Get the report
        'REPORT_DETAIL.ReportObjectID = ReportView.GetFocusedRowCellValue("ObjectID")
        'REPORT_DETAIL.DLL = ReportView.GetFocusedRowCellValue("DLL")
        'REPORT_DETAIL.ReportClass = ReportView.GetFocusedRowCellValue("ReportClass")
        'REPORT_DETAIL.ReportGroup = ReportView.GetFocusedRowCellValue("ReportGroup")
        With REPORT_DETAIL.ReportInfo
            .ObjectID = ReportView.GetFocusedRowCellValue("ObjectID")
            .DLL = ReportView.GetFocusedRowCellValue("DLL")
            .ReportClass = ReportView.GetFocusedRowCellValue("ReportClass")
            .ReportGroup = ReportView.GetFocusedRowCellValue("ReportGroup")
        End With
        

        PassPayrollSignatoryToReportDetail(REPORT_DETAIL)

        extAssembly = System.Reflection.Assembly.Load(REPORT_DETAIL.ReportInfo.DLL)
        extAssembly.CreateInstance(REPORT_DETAIL.ReportInfo.DLL & "." & REPORT_DETAIL.ReportInfo.ReportClass, True, Reflection.BindingFlags.Default, Nothing, New Object() {REPORT_DETAIL}, Nothing, Nothing)
        'GENERATES AN OUTPUT FOR EACH REPORT GENERATED BY THE REPORT CLASS
        OutputReport(REPORT_DETAIL.MainReport, REPORT_DETAIL.Output.Mode, REPORT_DETAIL.Output.ExportType, REPORT_DETAIL.Output.Path, REPORT_DETAIL)
    End Sub


    Public Sub New(_DB As SQLDB, _PayRollViewName As String)

        ' This call is required by the designer.
        InitializeComponent()
        ' Add any initialization after the InitializeComponent() call.
        DB = _DB 'Use Current database
        PayrollViewName = _PayRollViewName 'Typeof Payroll Control View is being Used
        RefreshData() 'Refresh data


    End Sub

    Private _ReportViewCount As Integer = 0
    Public Property ReportViewCount() As Integer
        Get
            Return _ReportViewCount
        End Get
        Set(ByVal value As Integer)
            _ReportViewCount = value
        End Set
    End Property

    Private Sub ReportView_RowCellStyle(sender As Object, e As DevExpress.XtraGrid.Views.Grid.RowCellStyleEventArgs) Handles ReportView.RowCellStyle
        Dim view As DevExpress.XtraGrid.Views.Grid.GridView = TryCast(sender, DevExpress.XtraGrid.Views.Grid.GridView)
        If e.RowHandle = view.FocusedRowHandle Then
            e.Appearance.BackColor = System.Drawing.Color.Yellow
        End If
    End Sub



    Private Sub ReportView_RowCountChanged(sender As Object, e As System.EventArgs) Handles ReportView.RowCountChanged
        Dim _V As DevExpress.XtraGrid.Views.Grid.GridView = TryCast(sender, DevExpress.XtraGrid.Views.Grid.GridView)
        ReportViewCount = _V.RowCount
    End Sub
End Class
